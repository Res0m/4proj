version: '3.8'

services:
  main-server:
    build:
      context: .
      dockerfile: Dockerfile.main
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      main-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      main-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  chat-server:
    build:
      context: .
      dockerfile: Dockerfile.chat
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      main-server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s 